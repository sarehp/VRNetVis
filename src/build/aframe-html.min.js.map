{"version":3,"file":"aframe-html.min.js","sources":["../src/HTMLMesh.js","../src/aframe-html.js"],"sourcesContent":["import {\n\tCanvasTexture,\n\tLinearFilter,\n\tMesh,\n\tMeshBasicMaterial,\n\tPlaneGeometry,\n\tsRGBEncoding,\n\tColor\n} from 'three';\n\nclass HTMLMesh extends Mesh {\n\n\tconstructor( dom ) {\n\n\t\tconst texture = new HTMLTexture( dom );\n\n\t\tconst geometry = new PlaneGeometry( texture.image.width * 0.001, texture.image.height * 0.001 );\n\t\tconst material = new MeshBasicMaterial( { map: texture, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tfunction onEvent( event ) {\n\n\t\t\tmaterial.map.dispatchDOMEvent( event );\n\n\t\t}\n\n\t\tthis.addEventListener( 'mousedown', onEvent );\n\t\tthis.addEventListener( 'mousemove', onEvent );\n\t\tthis.addEventListener( 'mouseup', onEvent );\n\t\tthis.addEventListener( 'click', onEvent );\n\n\t\tthis.dispose = function () {\n\n\t\t\tgeometry.dispose();\n\t\t\tmaterial.dispose();\n\n\t\t\tmaterial.map.dispose();\n\n\t\t\tthis.removeEventListener( 'mousedown', onEvent );\n\t\t\tthis.removeEventListener( 'mousemove', onEvent );\n\t\t\tthis.removeEventListener( 'mouseup', onEvent );\n\t\t\tthis.removeEventListener( 'click', onEvent );\n\n\t\t};\n\n\t}\n\n}\n\nclass HTMLTexture extends CanvasTexture {\n\n\tconstructor( dom ) {\n\n\t\tsuper( html2canvas( dom ) );\n\n\t\tthis.dom = dom;\n\n\t\tthis.anisotropy = 16;\n\t\tthis.encoding = sRGBEncoding;\n\t\tthis.minFilter = LinearFilter;\n\t\tthis.magFilter = LinearFilter;\n\n\t\t// Create an observer on the DOM, and run html2canvas update in the next loop\n\t\tconst observer = new MutationObserver( () => {\n\n\t\t\tif ( ! this.scheduleUpdate ) {\n\n\t\t\t\t// ideally should use xr.requestAnimationFrame, here setTimeout to avoid passing the renderer\n\t\t\t\tthis.scheduleUpdate = setTimeout( () => this.update(), 16 );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst config = { attributes: true, childList: true, subtree: true, characterData: true };\n\t\tobserver.observe( dom, config );\n\n\t\tthis.observer = observer;\n\n\t}\n\n\tdispatchDOMEvent( event ) {\n\n\t\tif ( event.data ) {\n\n\t\t\thtmlevent( this.dom, event.type, event.data.x, event.data.y );\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tthis.image = html2canvas( this.dom );\n\t\tthis.needsUpdate = true;\n\n\t\tthis.scheduleUpdate = null;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.observer ) {\n\n\t\t\tthis.observer.disconnect();\n\n\t\t}\n\n\t\tthis.scheduleUpdate = clearTimeout( this.scheduleUpdate );\n\n\t\tsuper.dispose();\n\n\t}\n\n}\n\n\n//\n\nconst canvases = new WeakMap();\n\nfunction html2canvas( element ) {\n\n\tconst range = document.createRange();\n\tconst color = new Color();\n\n\tfunction Clipper( context ) {\n\n\t\tconst clips = [];\n\t\tlet isClipping = false;\n\n\t\tfunction doClip() {\n\n\t\t\tif ( isClipping ) {\n\n\t\t\t\tisClipping = false;\n\t\t\t\tcontext.restore();\n\n\t\t\t}\n\n\t\t\tif ( clips.length === 0 ) return;\n\n\t\t\tlet minX = - Infinity, minY = - Infinity;\n\t\t\tlet maxX = Infinity, maxY = Infinity;\n\n\t\t\tfor ( let i = 0; i < clips.length; i ++ ) {\n\n\t\t\t\tconst clip = clips[ i ];\n\n\t\t\t\tminX = Math.max( minX, clip.x );\n\t\t\t\tminY = Math.max( minY, clip.y );\n\t\t\t\tmaxX = Math.min( maxX, clip.x + clip.width );\n\t\t\t\tmaxY = Math.min( maxY, clip.y + clip.height );\n\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.beginPath();\n\t\t\tcontext.rect( minX, minY, maxX - minX, maxY - minY );\n\t\t\tcontext.clip();\n\n\t\t\tisClipping = true;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tadd: function ( clip ) {\n\n\t\t\t\tclips.push( clip );\n\t\t\t\tdoClip();\n\n\t\t\t},\n\n\t\t\tremove: function () {\n\n\t\t\t\tclips.pop();\n\t\t\t\tdoClip();\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction drawText( style, x, y, string ) {\n\n\t\tif ( string !== '' ) {\n\n\t\t\tif ( style.textTransform === 'uppercase' ) {\n\n\t\t\t\tstring = string.toUpperCase();\n\n\t\t\t}\n\n\t\t\tcontext.font = style.fontWeight + ' ' + style.fontSize + ' ' + style.fontFamily;\n\t\t\tcontext.textBaseline = 'top';\n\t\t\tcontext.fillStyle = style.color;\n\t\t\tcontext.fillText( string, x, y + parseFloat(style.fontSize)*0.1 );\n\n\t\t}\n\n\t}\n\n\tfunction buildRectPath(x, y, w, h, r) {\n\t\tif (w < 2 * r) r = w / 2;\n\t\tif (h < 2 * r) r = h / 2;\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x+r, y);\n\t\tcontext.arcTo(x+w, y,   x+w, y+h, r);\n\t\tcontext.arcTo(x+w, y+h, x,   y+h, r);\n\t\tcontext.arcTo(x,   y+h, x,   y,   r);\n\t\tcontext.arcTo(x,   y,   x+w, y,   r);\n\t\tcontext.closePath();\n\t}\n\n\tfunction drawBorder( style, which, x, y, width, height ) {\n\n\t\tconst borderWidth = style[ which + 'Width' ];\n\t\tconst borderStyle = style[ which + 'Style' ];\n\t\tconst borderColor = style[ which + 'Color' ];\n\n\t\tif ( borderWidth !== '0px' && borderStyle !== 'none' && borderColor !== 'transparent' && borderColor !== 'rgba(0, 0, 0, 0)' ) {\n\n\t\t\tcontext.strokeStyle = borderColor;\n\t\t\tcontext.lineWidth = parseFloat(borderWidth);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo( x, y );\n\t\t\tcontext.lineTo( x + width, y + height );\n\t\t\tcontext.stroke();\n\n\t\t}\n\n\t}\n\n\tfunction drawElement( element, style ) {\n\n\t\tlet x = 0, y = 0, width = 0, height = 0;\n\n\t\tif ( element.nodeType === Node.TEXT_NODE ) {\n\n\t\t\t// text\n\n\t\t\trange.selectNode( element );\n\n\t\t\tconst rect = range.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\t\t\twidth = rect.width;\n\t\t\theight = rect.height;\n\n\t\t\tdrawText( style, x, y, element.nodeValue.trim() );\n\n\t\t} else if ( element.nodeType === Node.COMMENT_NODE ) {\n\n\t\t\treturn;\n\n\t\t} else if ( element instanceof HTMLCanvasElement ) {\n\n\t\t\t// Canvas element\n\t\t\tif ( element.style.display === 'none' ) return;\n\n\t\t\tcontext.save();\n\t\t\tconst dpr = window.devicePixelRatio;\n\t\t\tcontext.scale(1/dpr, 1/dpr);\n\t\t\tcontext.drawImage(element, 0, 0 );\n\t\t\tcontext.restore();\n\n\t\t} else {\n\n\t\t\tif ( element.style.display === 'none' ) return;\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\t\t\twidth = rect.width;\n\t\t\theight = rect.height;\n\n\t\t\tstyle = window.getComputedStyle( element );\n\n\t\t\tconst backgroundColor = style.backgroundColor;\n\n\t\t\t// Get the border of the element used for fill and border\n\t\t\tbuildRectPath(x, y, width, height, parseFloat(style.borderRadius) );\n\t\t\tif ( backgroundColor !== 'transparent' && backgroundColor !== 'rgba(0, 0, 0, 0)' ) {\n\n\t\t\t\tcontext.fillStyle = backgroundColor;\n\t\t\t\tcontext.fill();\n\t\t\t}\n\n\t\t\t// If all the borders match then stroke the round rectangle\n\t\t\tconst borders = ['borderTop', 'borderLeft', 'borderBottom', 'borderRight'];\n\t\t\tlet match = true;\n\t\t\tlet prevBorder = null;\n\t\t\tfor (const border of borders) {\n\t\t\t\tif (prevBorder) {\n\t\t\t\t\tmatch = (style[ border + 'Width' ] === style[ prevBorder + 'Width' ]) &&\n\t\t\t\t\t(style[ border + 'Color' ] === style[ prevBorder + 'Color' ]) &&\n\t\t\t\t\t(style[ border + 'Style' ] === style[ prevBorder + 'Style' ]);\n\t\t\t\t}\n\t\t\t\tif (!match) break;\n\t\t\t\tprevBorder = border;\n\t\t\t}\n\n\t\t\t// they all match so stroke the rectangle from before allows for border-radius\n\t\t\tif (match) {\n\t\t\t\tconst width = parseFloat(style.borderTopWidth);\n\t\t\t\tif ( style.borderTopWidth !== '0px' && style.borderTopStyle !== 'none' && style.borderTopColor !== 'transparent' && style.borderTopColor !== 'rgba(0, 0, 0, 0)' ) {\n\t\t\t\t\tcontext.strokeStyle = style.borderTopColor;\n\t\t\t\t\tcontext.lineWidth = width;\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Otherwise draw individual borders\n\t\t\t\tdrawBorder( style, 'borderTop', x, y, width, 0 );\n\t\t\t\tdrawBorder( style, 'borderLeft', x, y, 0, height );\n\t\t\t\tdrawBorder( style, 'borderBottom', x, y + height, width, 0 );\n\t\t\t\tdrawBorder( style, 'borderRight', x + width, y, 0, height );\n\t\t\t}\n\n\t\t\tif ( element instanceof HTMLInputElement) {\n\n\t\t\t\tlet accentColor = style.accentColor;\n\t\t\t\tif (accentColor === undefined || accentColor === 'auto') accentColor = style.color;\n\t\t\t\tcolor.set(accentColor);\n\t\t\t\tconst luminance = Math.sqrt( 0.299*color.r**2 + 0.587*color.g**2 + 0.114*color.b**2 );\n\t\t\t\tconst accentTextColor = luminance < 0.5 ? 'white' : '#111111';\n\n\t\t\t\tif (element.type  === 'radio') {\n\t\t\t\t\tbuildRectPath(x,y,width,height,height);\n\t\t\t\t\tcontext.fillStyle = 'white';\n\t\t\t\t\tcontext.strokeStyle = accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.fill();\n\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t\tif (element.checked) {\n\t\t\t\t\t\tconst border = 2;\n\t\t\t\t\t\tbuildRectPath(x+border,y+border,width-border*2,height-border*2, height);\n\t\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\t\tcontext.strokeStyle = accentTextColor;\n\t\t\t\t\t\tcontext.lineWidth = border;\n\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (element.type  === 'checkbox') {\n\t\t\t\t\tbuildRectPath(x,y,width,height,2);\n\t\t\t\t\tcontext.fillStyle = element.checked ? accentColor : 'white';\n\t\t\t\t\tcontext.strokeStyle = element.checked ? accentTextColor : accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.fill();\n\n\t\t\t\t\tif (element.checked) {\n\t\t\t\t\t\tconst oldTextAlign = context.textAlign;\n\t\t\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\t\t\tdrawText( {\n\t\t\t\t\t\t\tcolor: accentTextColor,\n\t\t\t\t\t\t\tfontFamily: style.fontFamily,\n\t\t\t\t\t\t\tfontSize: height + 'px',\n\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t}, x + width/2, y, 'âœ”' );\n\t\t\t\t\t\tcontext.textAlign = oldTextAlign;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (element.type  === 'range') {\n\t\t\t\t\tconst [min,max,value] = ['min','max','value'].map(property => parseFloat(element[property]));\n\t\t\t\t\tconst position = ((value-min)/(max-min)) * (width - height);\n\n\t\t\t\t\tbuildRectPath(x,y + height*0.25,width, height*0.5, height*0.25);\n\t\t\t\t\tcontext.fillStyle = accentTextColor;\n\t\t\t\t\tcontext.strokeStyle = accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.fill();\n\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t\tbuildRectPath(x,y + height*0.25,position+height*0.5, height*0.5, height*0.25);\n\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\tcontext.fill();\n\n\t\t\t\t\tbuildRectPath(x + position,y,height, height, height*0.5);\n\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\tcontext.fill();\n\t\t\t\t}\n\n\t\t\t\tif (element.type === 'color' || element.type === 'text' || element.type === 'number' ) {\n\n\t\t\t\t\tclipper.add( { x: x, y: y, width: width, height: height } );\n\n\t\t\t\t\tdrawText( style, x + parseInt( style.paddingLeft ), y + parseInt( style.paddingTop ), element.value );\n\n\t\t\t\t\tclipper.remove();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/*\n\t\t// debug\n\t\tcontext.strokeStyle = '#' + Math.random().toString( 16 ).slice( - 3 );\n\t\tcontext.strokeRect( x - 0.5, y - 0.5, width + 1, height + 1 );\n\t\t*/\n\n\t\tconst isClipping = style.overflow === 'auto' || style.overflow === 'hidden';\n\n\t\tif ( isClipping ) clipper.add( { x: x, y: y, width: width, height: height } );\n\n\t\tfor ( let i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tdrawElement( element.childNodes[ i ], style );\n\n\t\t}\n\n\t\tif ( isClipping ) clipper.remove();\n\n\t}\n\n\tconst offset = element.getBoundingClientRect();\n\n\tlet canvas;\n\n\tif ( canvases.has( element ) ) {\n\n\t\tcanvas = canvases.get( element );\n\n\t} else {\n\n\t\tcanvas = document.createElement( 'canvas' );\n\t\tcanvas.width = offset.width;\n\t\tcanvas.height = offset.height;\n\n\t}\n\n\tconst context = canvas.getContext( '2d'/*, { alpha: false }*/ );\n\n\tconst clipper = new Clipper( context );\n\n\t// console.time( 'drawElement' );\n\n\tdrawElement( element );\n\n\t// console.timeEnd( 'drawElement' );\n\n\treturn canvas;\n\n}\n\nfunction htmlevent( element, event, x, y ) {\n\n\tconst mouseEventInit = {\n\t\tclientX: ( x * element.offsetWidth ) + element.offsetLeft,\n\t\tclientY: ( y * element.offsetHeight ) + element.offsetTop,\n\t\tview: element.ownerDocument.defaultView\n\t};\n\n\twindow.dispatchEvent( new MouseEvent( event, mouseEventInit ) );\n\n\tconst rect = element.getBoundingClientRect();\n\n\tx = x * rect.width + rect.left;\n\ty = y * rect.height + rect.top;\n\n\tfunction traverse( element ) {\n\n\t\tif ( element.nodeType !== Node.TEXT_NODE && element.nodeType !== Node.COMMENT_NODE ) {\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tif ( x > rect.left && x < rect.right && y > rect.top && y < rect.bottom ) {\n\n\t\t\t\telement.dispatchEvent( new MouseEvent( event, mouseEventInit ) );\n\n\t\t\t\tif ( \n\t\t\t\t\telement instanceof HTMLInputElement && element.type  === 'range' &&\n\t\t\t\t\t(event === 'mousedown' || event === 'click')\n\t\t\t\t) {\n\t\t\t\t\tconst [min,max] = ['min','max'].map(property => parseFloat(element[property]));\n\t\t\t\t\tconst width = rect.width;\n\t\t\t\t\tconst offsetX = x - rect.x;\n\t\t\t\t\tconst proportion = offsetX/width;\n\t\t\t\t\telement.value = min + (max-min)*proportion;\n\t\t\t\t\telement.dispatchEvent(new InputEvent('input', {bubbles: true}));\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\t\ttraverse( element.childNodes[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttraverse( element );\n\n}\n\nexport { HTMLMesh };\n","/* jshint esversion: 9, -W097 */\n/* For dealing with spline curves */\n/* global THREE, AFRAME, setTimeout, console */\n'use strict';\n\nimport { HTMLMesh } from './HTMLMesh.js';\n\nconst schemaPointer = {\n\tactivationType: {\n\t\toneOf: ['event', 'proximity'],\n\t\tdefault: 'event'\n\t},\n\tproximityElA: {\n\t\ttype: 'selector'\n\t},\n\tproximityElB: {\n\t\ttype: 'selector'\n\t},\n\tproximityTrigger: {\n\t\tdefault: 0.015\n\t},\n\tdownEvents: {\n\t\ttype: 'array',\n\t\tdefault: ['selectstart']\n\t},\n\tupEvents: {\n\t\ttype: 'array',\n\t\tdefault: ['selectend']\n\t},\n\tclickEvents: {\n\t\ttype: 'array',\n\t\tdefault: ['select']\n\t},\n\n};\n\nconst schemaHTML = {\n\ttype: 'selector',\n};\n\ndocumentation:\n{\n\tschemaHTML.description = `HTML element to use.`;\n\tschemaPointer.activationType.description = `Use an event for mouse down and up or proximity between two elements`;\n\tschemaPointer.downEvents.description = `Event to trigger 'mouseDown' events`;\n\tschemaPointer.upEvents.description = `Event to trigger 'mouseUp' events`;\n\tschemaPointer.clickEvents.description = `Event to trigger 'click' events`;\n\tschemaPointer.proximityElA.description = `Elements to link together`;\n\tschemaPointer.proximityElB.description = `Elements to link together`;\n\tschemaPointer.proximityTrigger.description = `Distance the elements need to be count as being mouseDown`;\n\tconsole.log(`Display an interactive HTML element in the scene.`);\n}\n\nconst _pointer = new THREE.Vector2();\nconst _event = { type: '', data: _pointer };\nconst tempVector3A = new THREE.Vector3();\nconst tempVector3B = new THREE.Vector3();\nAFRAME.registerComponent('html-pointer', {\n\tschema: schemaPointer,\n\tinit() {\n\t\tthis.htmlEl = null;\n\t\tthis.onDown = e => this.handle('mousedown', e);\n\t\tthis.onUp = e => this.handle('mouseup', e);\n\t\tthis.onClick = e => this.handle('click', e);\n\n\t\tthis.onIntersection = e => this.htmlEl = e.detail.els[0];\n\t\tthis.onIntersectionCleared = _e => this.htmlEl = null;\n\t\tthis.el.addEventListener('raycaster-intersection', this.onIntersection);\n\t\tthis.el.addEventListener('raycaster-intersection-cleared', this.onIntersectionCleared);\n\t\t\n\t\tconst geom = new THREE.SphereGeometry( 0.007, 12, 6 );\n\t\tconst mesh = new THREE.Mesh(\n\t\t\tgeom, new THREE.MeshBasicMaterial( { color: 0x000000 } )\n\t\t);\n\t\tthis.cursor = mesh;\n\t\tthis.el.setObject3D('cursor', mesh);\n\t\tthis.prevD = Infinity;\n\t},\n\thandle(type) {\n\t\tthis.cursor.visible = false;\n\t\tif (this.htmlEl) {\n\t\t\tconst intersection = this.el.components.raycaster.getIntersection(this.htmlEl);\n\t\t\tif (intersection) {\n\t\t\t\tconst mesh = this.htmlEl.getObject3D('html');\n\t\t\t\tconst uv = intersection.uv;\n\t\t\t\t_event.type = type;\n\t\t\t\t_event.data.set( uv.x, 1 - uv.y );\n\t\t\t\tmesh.dispatchEvent( _event );\n\n\t\t\t\tthis.cursor.visible = true;\n\t\t\t\tthis.cursor.position\n\t\t\t\t.set(0,0,-1)\n\t\t\t\t.multiplyScalar(intersection.distance);\n\t\t\t}\n\t\t}\n\t},\n\ttick() {\n\t\tthis.handle('mousemove');\n\t\tif (this.data.activationType === 'proximity') {\n\t\t\tconst a = this.data.proximityElA?.object3D;\n\t\t\tconst b = this.data.proximityElB?.object3D;\n\t\t\tif (a && b) {\n\t\t\t\tconst aPos = a.getWorldPosition(tempVector3A);\n\t\t\t\tconst bPos = b.getWorldPosition(tempVector3B);\n\t\t\t\tconst d = aPos.distanceTo(bPos);\n\t\t\t\t\n\t\t\t\t// was further now closer\n\t\t\t\tif (d <= this.data.proximityTrigger && this.prevD > this.data.proximityTrigger) {\n\t\t\t\t\tthis.handle('mousedown');\n\t\t\t\t}\n\t\t\t\t// was closer now further\n\t\t\t\tif (d > this.data.proximityTrigger && this.prevD <= this.data.proximityTrigger) {\n\t\t\t\t\tthis.handle('mouseup');\n\t\t\t\t\tthis.handle('click');\n\t\t\t\t}\n\t\t\t\tthis.prevD = d;\n\t\t\t}\n\t\t}\n\t},\n\tupdate(oldData = {}) {\n\t\tif (oldData.downEvents) {\n\t\t\tfor (const eventName of oldData.downEvents) {\n\t\t\t\tthis.el.removeEventListener(eventName, this.onDown);\n\t\t\t}\n\t\t}\n\n\t\tif (oldData.upEvents) {\n\t\t\tfor (const eventName of oldData.upEvents) {\n\t\t\t\tthis.el.removeEventListener(eventName, this.onUp);\n\t\t\t}\n\t\t}\n\n\t\tif (oldData.clickEvents) {\n\t\t\tfor (const eventName of oldData.clickEvents) {\n\t\t\t\tthis.el.removeEventListener(eventName, this.onClick);\n\t\t\t}\n\t\t}\n\n\t\tif (this.data.activationType === 'event') {\n\t\t\tfor (const eventName of this.data.downEvents) {\n\t\t\t\tthis.el.addEventListener(eventName, this.onDown);\n\t\t\t}\n\t\t\tfor (const eventName of this.data.upEvents) {\n\t\t\t\tthis.el.addEventListener(eventName, this.onUp);\n\t\t\t}\n\t\t\tfor (const eventName of this.data.clickEvents) {\n\t\t\t\tthis.el.addEventListener(eventName, this.onClick);\n\t\t\t}\n\t\t}\n\t},\n\tremove() {\n\t\tthis.el.removeEventListener('raycaster-intersection', this.onIntersection);\n\t\tthis.el.removeEventListener('raycaster-intersection-cleared', this.onIntersectionCleared);\n\t\tthis.el.removeObject3D('cursor');\n\t},\n});\n\nAFRAME.registerComponent('html', {\n\tschema: schemaHTML,\n\tinit() {\n\t\tthis.rerender = this.rerender.bind(this);\n\t},\n\tupdate() {\n\t\tthis.remove();\n\t\tif (!this.data) return;\n\t\tconst mesh = new HTMLMesh(this.data);\n\t\tthis.el.setObject3D('html', mesh);\n\t\tthis.data.addEventListener('input', this.rerender);\n\t\tthis.data.addEventListener('change', this.rerender);\n\t},\n\trerender() {\n\t\tconst mesh = this.el.getObject3D('html');\n\t\tif (mesh && !mesh.material.map.scheduleUpdate) {\n\t\t\tmesh.material.map.scheduleUpdate = setTimeout( () => mesh.material.map.update(), 16 );\n\t\t}\n\t},\n\tremove() {\n\t\tif (this.el.getObject3D('html')) {\n\t\t\tthis.el.removeObject3D('html');\n\t\t\tthis.data.removeEventListener('change', this.rerender);\n\t\t}\n\t},\n});\n"],"names":["HTMLMesh","Mesh","constructor","dom","texture","HTMLTexture","geometry","PlaneGeometry","image","width","height","material","MeshBasicMaterial","map","toneMapped","transparent","onEvent","event","dispatchDOMEvent","super","this","addEventListener","dispose","removeEventListener","CanvasTexture","html2canvas","anisotropy","encoding","sRGBEncoding","minFilter","LinearFilter","magFilter","observer","MutationObserver","scheduleUpdate","setTimeout","update","observe","attributes","childList","subtree","characterData","data","element","x","y","mouseEventInit","clientX","offsetWidth","offsetLeft","clientY","offsetHeight","offsetTop","view","ownerDocument","defaultView","window","dispatchEvent","MouseEvent","rect","getBoundingClientRect","traverse","nodeType","Node","TEXT_NODE","COMMENT_NODE","left","right","top","bottom","HTMLInputElement","type","min","max","property","parseFloat","proportion","value","InputEvent","bubbles","i","childNodes","length","htmlevent","needsUpdate","disconnect","clearTimeout","canvases","WeakMap","range","document","createRange","color","Color","drawText","style","string","textTransform","toUpperCase","context","font","fontWeight","fontSize","fontFamily","textBaseline","fillStyle","fillText","buildRectPath","w","h","r","beginPath","moveTo","arcTo","closePath","drawBorder","which","borderWidth","borderStyle","borderColor","strokeStyle","lineWidth","lineTo","stroke","offset","canvas","has","get","createElement","getContext","clipper","clips","isClipping","doClip","restore","minX","Infinity","minY","maxX","maxY","clip","Math","save","add","push","remove","pop","drawElement","selectNode","nodeValue","trim","HTMLCanvasElement","display","dpr","devicePixelRatio","scale","drawImage","backgroundColor","getComputedStyle","borderRadius","fill","borders","match","prevBorder","border","borderTopWidth","borderTopStyle","borderTopColor","accentColor","undefined","set","accentTextColor","sqrt","g","b","checked","oldTextAlign","textAlign","position","parseInt","paddingLeft","paddingTop","overflow","_event","THREE","Vector2","tempVector3A","Vector3","tempVector3B","AFRAME","registerComponent","schema","activationType","oneOf","default","proximityElA","proximityElB","proximityTrigger","downEvents","upEvents","clickEvents","init","htmlEl","onDown","e","handle","onUp","onClick","onIntersection","detail","els","onIntersectionCleared","_e","el","geom","SphereGeometry","mesh","cursor","setObject3D","prevD","visible","intersection","components","raycaster","getIntersection","getObject3D","uv","multiplyScalar","distance","tick","a","object3D","aPos","getWorldPosition","bPos","d","distanceTo","oldData","eventName","removeObject3D","rerender","bind"],"mappings":"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"}